/*!
 *  Bayrell Development Console
 *
 *  (c) Copyright 2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayrellConsole.Modules.Navigator;

use Runtime.Interfaces.ContextInterface;
use Core.UI.Annotations.RouteInfo;
use Core.Http.ApiRequest;
use Core.Http.ApiResult;
use Core.Http.Response;
use Core.UI.Render.CoreRoute;
use Core.UI.Render.CoreLayout;
use Core.UI.Render.RenderContainer;
use Core.UI.Render.WebContainer;
use Core.Components.Tree.TreeModel;
use Core.Components.Tree.TreeItem;
use BayrellConsole.Modules.Navigator.Model;
use BayrellConsole.Modules.Navigator.NavigatorItem;
use BayrellConsole.Modules.Navigator.View;


class Routes extends CoreRoute
{
	
	/**
	 * Route Action
	 * @return WebContainer
	 */
	@RouteInfo
	{ 
		"uri": "/console/", 
		"name": "bayrell:console:main" 
	}
	public static async WebContainer IndexAction(WebContainer container, ContextInterface context)
	{
		
		ApiResult res = await ApiRequest::callApi(
			"BayrellConsole.Api.Navigator", "Core.FileSystem.FileTransferInterface", "getDirectoryListing",
			{}, context
		);
		
		/* Create model */
		Model model = new Model
		{
			"navigator": new TreeModel{ "items": NavigatorItem::convertFileNodes(res.result) },
		};
		
		/* Add response */
		container <= response <= container::responsePage
		(
			classof CoreLayout,
			new RenderContainer
			{
				"title": "Development Console",
			},
			classof View, model
		);
		
		return container;
	}
	
	
}